{"version":3,"file":"byu-theme-components.min.js","sources":["../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/style-inject/dist/style-inject.es.js","../components/byu-breadcrumbs/byu-breadcrumbs.js","../components/byu-footer-action-button/byu-footer-action-button.js","../components/byu-footer-column/byu-footer-column.js","../components/byu-footer/byu-footer.js","../components/byu-header/byu-header.js","../components/byu-menu/byu-menu.js","../node_modules/byu-web-component-utils/lib/matchesSelector.js","../node_modules/byu-web-component-utils/lib/querySelectorSlot.js","../components/byu-search/byu-search.js","../components/byu-social-media-links/byu-social-media-links.js","../components/byu-user-info/byu-user-info.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? marker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.1');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n            this.finalized) {\n            return;\n        }\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (typeof superCtor.finalize === 'function') {\n            superCtor.finalize();\n        }\n        this.finalized = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update. This getter can be implemented to\n     * await additional state. For example, it is sometimes useful to await a\n     * rendered element before fulfilling this Promise. To do this, first await\n     * `super.updateComplete` then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement.finalized = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.0');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        super.finalize();\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n */\nLitElement.finalized = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","'use strict'\n\nimport { html, css, customElement, LitElement, unsafeCSS } from 'lit-element'\nimport style from './byu-breadcrumbs.sass'\n\n@customElement('byu-breadcrumbs')\nexport class BYUBreadcrumbs extends LitElement {\n\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  render () {\n    return html`\n<nav class=\"byu-breadcrumbs\">\n    <slot class=\"byu-breadcrumbs-items\"></slot>\n</nav>\n    `\n  }\n}\n","import { LitElement, html, customElement, css, unsafeCSS } from 'lit-element'\nimport style from './byu-footer-action-button.sass'\n\n@customElement('byu-footer-action-button')\nexport class BYUFooterActionButton extends LitElement {\n\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  render () {\n    return html`\n    <div class=\"wrapper\">\n      <slot name=\"actiontext\"></slot>\n    </div>\n    `\n  }\n}\n","import { LitElement, html, customElement, css, unsafeCSS } from 'lit-element'\nimport style from './byu-footer-column.sass'\n\n@customElement('byu-footer-column')\nexport class BYUFooterColumn extends LitElement {\n\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  render () {\n    return html`\n    <h2 class=\"column-title\">\n        <slot name=\"header\"></slot>\n    </h2>\n    <div class=\"content\">\n        <slot></slot>\n    </div>\n    `\n  }\n}\n","// ESLint is disabled for this file because of the complicated SVG in the footer\n\nimport { LitElement, html, customElement, css, unsafeCSS } from 'lit-element'\nimport style from './byu-footer.sass';\n\n@customElement('byu-footer')\nexport class BYUFooter extends LitElement {\n\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  render() {\n    let date = new Date();\n    return html`\n    <div class=\"site-footer-wrapper\">\n        <div class=\"site-footer\">\n            <slot id=\"slot\"></slot>\n        </div>\n    </div>\n    <div class=\"university-footer\">\n        <div class=\"university-logo-wrapper\">\n            <a href=\"https://home.byu.edu/home/\" target=\"_blank\">\n                <svg class=\"university-logo\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                        viewBox=\"0 0 389.8 14\" style=\"enable-background:new 0 0 389.8 14;\" xml:space=\"preserve\">\n                    <style type=\"text/css\">\n                        .st0{fill:#FFFFFF;}\n                    </style>\n                    <g>\n                        <path class=\"st0\" d=\"M5.9,0.3c2.5,0,3.9,1.2,3.9,3.2v0.6c0,1.6-0.8,2.4-2.2,2.8v0.1C9.1,7.3,10,8.2,10,9.7v0.7\n                            c0,2.1-1.4,3.3-3.9,3.3H0V0.3H5.9z M2.8,5.9h2.6c1,0,1.6-0.5,1.6-1.4V3.9c0-0.8-0.6-1.3-1.6-1.3H2.8V5.9z M2.8,11.4h2.8\n                            c1,0,1.6-0.5,1.6-1.4V9.4c0-0.9-0.6-1.4-1.7-1.4H2.8V11.4z\"/>\n                        <path class=\"st0\" d=\"M20.6,13.7h-2.9V0.3h5.8c2.8,0,4.3,1.4,4.3,3.7v1c0,1.7-0.9,2.9-2.4,3.4l2.9,5.2h-3.1l-2.6-4.9h-1.9V13.7z\n                            M20.6,6.6H23c1.4,0,2-0.6,2-1.6V4.2c0-1-0.6-1.6-2-1.6h-2.4V6.6z\"/>\n                        <path class=\"st0\" d=\"M38.6,0.3v13.4h-2.9V0.3H38.6z\"/>\n                        <path class=\"st0\" d=\"M57,4.4v0.5h-2.8V4.7c0-1.4-0.7-2.2-2.3-2.2c-1.7,0-2.7,1.2-2.7,3.1v3c0,1.9,1,3.1,2.6,3.1\n                            c1.5,0,2.5-1,2.5-2.4V8.6h-2.4v-2h5.2v7.1h-1.3l-0.4-2c-0.7,1.2-1.8,2.3-4,2.3c-3,0-5-2.1-5-5.4v-3c0-3.3,2.1-5.5,5.6-5.5\n                            C55.2,0,57,1.7,57,4.4z\"/>\n                        <path class=\"st0\" d=\"M68,0.3v5.3h4.7V0.3h2.9v13.4h-2.9V8.2H68v5.5h-2.9V0.3H68z\"/>\n                        <path class=\"st0\" d=\"M91.2,11.2h-4.8l-0.8,2.5h-2.8l4.4-13.5h3.3l4.4,13.5h-3L91.2,11.2z M87.1,8.9h3.4l-1.7-5.5h0L87.1,8.9z\"/>\n                        <path class=\"st0\" d=\"M106.2,0.3l3.1,9.2h0l3-9.2h4.1v13.4h-2.7V3.6h0l-3.3,10.1h-2.2l-3.4-10.1h0v10.1h-2.6V0.3H106.2z\"/>\n                        <path class=\"st0\" d=\"M135.3,0.3l2.8,5.7l2.8-5.7h3.1l-4.4,8.3v5.1h-2.9V8.6l-4.4-8.3H135.3z\"/>\n                        <path class=\"st0\" d=\"M161.6,5.7v2.6c0,3.7-2.2,5.7-5.6,5.7c-3.5,0-5.6-1.9-5.6-5.7V5.7c0-3.7,2.2-5.7,5.6-5.7\n                            C159.4,0,161.6,1.9,161.6,5.7z M153.3,5.6v2.8c0,2.2,1,3.1,2.7,3.1c1.7,0,2.7-1,2.7-3.1V5.6c0-2.2-1-3.1-2.7-3.1\n                            C154.3,2.5,153.3,3.4,153.3,5.6z\"/>\n                        <path class=\"st0\" d=\"M172.1,0.3v8.6c0,1.7,0.8,2.6,2.4,2.6s2.4-0.9,2.4-2.6V0.3h2.8v8.5c0,3.3-1.7,5.2-5.2,5.2\n                            c-3.5,0-5.2-1.9-5.2-5.2V0.3H172.1z\"/>\n                        <path class=\"st0\" d=\"M190.4,0.3l5.1,8.6h0l0-8.6h2.6v13.4h-2.8L190.1,5h0l0,8.7h-2.6V0.3H190.4z\"/>\n                        <path class=\"st0\" d=\"M216.6,4.4v0.5h-2.8V4.7c0-1.4-0.7-2.2-2.3-2.2c-1.7,0-2.7,1.2-2.7,3.1v3c0,1.9,1,3.1,2.6,3.1\n                            c1.5,0,2.5-1,2.5-2.4V8.6h-2.4v-2h5.2v7.1h-1.3l-0.4-2c-0.7,1.2-1.8,2.3-4,2.3c-3,0-5-2.1-5-5.4v-3c0-3.3,2.1-5.5,5.6-5.5\n                            C214.8,0,216.6,1.7,216.6,4.4z\"/>\n                        <path class=\"st0\" d=\"M236.2,0.3v8.6c0,1.7,0.8,2.6,2.4,2.6c1.5,0,2.4-0.9,2.4-2.6V0.3h2.8v8.5c0,3.3-1.7,5.2-5.2,5.2\n                            c-3.5,0-5.2-1.9-5.2-5.2V0.3H236.2z\"/>\n                        <path class=\"st0\" d=\"M254.5,0.3l5.1,8.6h0l0-8.6h2.6v13.4h-2.8L254.2,5h0l0,8.7h-2.6V0.3H254.5z\"/>\n                        <path class=\"st0\" d=\"M273.5,0.3v13.4h-2.9V0.3H273.5z\"/>\n                        <path class=\"st0\" d=\"M284,0.3l2.9,9.5h0l2.9-9.5h3l-4.5,13.5h-2.9l-4.5-13.5H284z\"/>\n                        <path class=\"st0\" d=\"M309.1,0.3v2.5h-6.3v3h4.9v2.3h-4.9v3.2h6.4v2.5h-9.2V0.3H309.1z\"/>\n                        <path class=\"st0\" d=\"M319.1,13.7h-2.9V0.3h5.8c2.8,0,4.3,1.4,4.3,3.7v1c0,1.7-0.9,2.9-2.4,3.4l2.9,5.2h-3.1l-2.6-4.9h-1.9V13.7z\n                            M319.1,6.6h2.3c1.4,0,2.1-0.6,2.1-1.6V4.2c0-1-0.6-1.6-2-1.6h-2.4V6.6z\"/>\n                        <path class=\"st0\" d=\"M343.8,4.1v0.4h-2.9V4.2c0-1-0.7-1.8-2.3-1.8c-1.3,0-2,0.6-2,1.4c0,1,0.7,1.3,2.9,2c3.4,0.9,4.4,1.9,4.4,4.1\n                            c0,2.5-2.1,4-5.2,4c-3.6,0-5.2-1.6-5.2-4.1V9.2h2.9v0.4c0,1.2,0.8,2,2.5,2c1.4,0,2.2-0.5,2.2-1.5c0-1.1-0.5-1.3-3-2.1\n                            c-3.2-0.8-4.3-1.8-4.3-4.1c0-2.3,1.9-3.9,5-3.9C342.2,0.1,343.8,1.7,343.8,4.1z\"/>\n                        <path class=\"st0\" d=\"M354.5,0.3v13.4h-2.9V0.3H354.5z\"/>\n                        <path class=\"st0\" d=\"M372,0.3v2.5h-3.8v10.9h-2.9V2.8h-3.8V0.3H372z\"/>\n                        <path class=\"st0\" d=\"M381.2,0.3L384,6l2.8-5.7h3.1l-4.4,8.3v5.1h-2.9V8.6l-4.4-8.3H381.2z\"/>\n                    </g>\n                    </svg>\n            </a>\n        </div>\n        <div class=\"university-info\">\n            <span class=\"info-text\">Provo, UT 84602, USA</span>\n            <span class=\"info-text\"><a class=\"contact-phone\" href=\"tel:18014224636\">801-422-4636</a></span>\n            <span class=\"info-text\">${date.getFullYear()} &copy;<span id=\"currentYear\"></span> All Rights Reserved</span>\n            \n        </div>\n    </div>\n    `;\n  }\n}\n","'use strict'\n\nimport { html, css, customElement, LitElement, unsafeCSS } from 'lit-element'\nimport style from './byu-header.sass'\n\nconst JS_INIT_CLASS = 'js-enabled'\nconst EXPANDED_ATTR = 'aria-expanded'\nconst MENU_OPEN_CLASS = 'menu-open'\nconst SITE_NAV_CLASS = 'byu-site-navigation'\nconst SITE_ACTION_CLASS = 'byu-action-id-search'\n\n@customElement('byu-header')\nexport class BYUHeader extends LitElement {\n\n  firstUpdated (_changedProperties) {\n    const headerEls = this.shadowRoot.querySelectorAll('.byu-header')\n    Array.prototype.forEach.call(headerEls, (el) => {\n      this._enableMobileMenu(el)\n    })\n  }\n\n  _enableMobileMenu (headerEl) {\n    headerEl.hasNav = headerEl.getElementsByClassName(SITE_NAV_CLASS).length > 0\n    headerEl.hasActions = headerEl.getElementsByClassName(SITE_ACTION_CLASS).length > 0\n\n    const showMenuButton = headerEl.hasNav || headerEl.hasActions\n\n    if (showMenuButton) {\n      headerEl.classList.add(JS_INIT_CLASS)\n      this._initMenuButton(headerEl)\n\n      headerEl.navEl = headerEl.getElementsByClassName(SITE_NAV_CLASS)[0]\n      headerEl.actionsEl = headerEl.getElementsByClassName(SITE_ACTION_CLASS)[0]\n    }\n  }\n\n  _initMenuButton (headerEl) {\n    const menuButton = headerEl.getElementsByClassName('byu-menu-button')[0]\n\n    menuButton.addEventListener('click', (e) => {\n      this._clickMenuButton(e.target, headerEl)\n    })\n  }\n\n  _clickMenuButton (btn, headerEl) {\n    const open = btn.getAttribute(EXPANDED_ATTR) !== 'false'\n    const opening = false\n\n    // Open\n    if (!open && !opening) {\n      this._openMenu(btn, headerEl)\n    }\n\n    // Close\n    else {\n      this._closeMenu(btn, headerEl)\n    }\n  }\n\n  _openMenu (btn, headerEl) {\n    // Set the open/closed attribute on the button\n    btn.setAttribute(EXPANDED_ATTR, true)\n\n    const hasMenuOpenClass = headerEl.getElementsByClassName(MENU_OPEN_CLASS).length > 0\n    if (!hasMenuOpenClass) {\n      headerEl.classList.add(MENU_OPEN_CLASS)\n    }\n  }\n\n  _closeMenu (btn, headerEl) {\n\n    // Set the open/closed attribute on the button\n    btn.setAttribute(EXPANDED_ATTR, false)\n\n    // Set the open/closed attribute on the header\n    headerEl.classList.remove(MENU_OPEN_CLASS)\n  }\n\n  // Attach styles to component\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  // Render the component\n  render () {\n    return html`\n<header role=\"banner\" class=\"byu-header\">\n    <div class=\"byu-site-banner\">\n        <a class=\"byu-link\" href=\"https://byu.edu\">\n            <span class=\"visually-hidden\">BYU</span>\n        </a>\n        <div class=\"byu-titles\">\n            <slot name=\"breadcrumbs\" class=\"byu-site-breadcrumbs\"></slot>\n            <h1 class=\"byu-site-title\">\n                <a href=\"/\">\n                    <slot name=\"site-title\"></slot>\n                </a>\n            </h1>\n            <h2 class=\"byu-site-subtitle\">\n                <slot name=\"site-subtitle\"></slot>\n            </h2>\n            <button class=\"byu-menu-button\" aria-expanded=\"false\">Menu</button>\n        </div>\n        <div class=\"byu-action-id-search\">\n            <div class=\"byu-action-btn\">\n                <slot name=\"actions\"></slot>\n            </div>\n            <slot name=\"search\"></slot>\n            <slot name=\"user\"></slot>\n        </div>\n    </div>\n    <slot name=\"nav\" class=\"byu-site-navigation\"></slot>\n</header>\n    `\n  }\n}\n","'use strict'\n\nimport { html, css, customElement, LitElement, unsafeCSS } from 'lit-element'\nimport style from './byu-menu.sass'\n\n@customElement('byu-menu')\nexport class BYUMenu extends LitElement {\n\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  render () {\n    return html`\n<nav class=\"byu-menu\">\n    <slot class=\"byu-menu-items\"></slot>\n</nav>\n    `\n  }\n}\n","/*\n *  @license\n *    Copyright 2017 Brigham Young University\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\"use strict\";\n\nexport default function matchesSelector(el, selector) {\n    let proto = Element.prototype;\n    let actual =\n        proto.matches ||\n        proto.matchesSelector ||\n        proto.mozMatchesSelector ||\n        proto.msMatchesSelector ||\n        proto.oMatchesSelector ||\n        proto.webkitMatchesSelector ||\n        function (s) {\n            let doc = this.document || this.ownerDocument;\n            return doc.querySelectorAll(s).indexOf(this) !== -1;\n        };\n\n    return actual.call(el, selector);\n}\n","/*\n *  @license\n *    Copyright 2017 Brigham Young University\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\"use strict\";\n\nimport matches from './matchesSelector.js';\n\nexport default function querySelectorSlot(slot, selector) {\n    let roots = slot.assignedNodes({flatten: true})\n        .filter(n => n.nodeType === Node.ELEMENT_NODE);\n\n    for (let i = 0, len = roots.length; i < len; i++) {\n        let each = roots[i];\n        if (matches(each, selector)) {\n            return each;\n        }\n        let child = each.querySelector(selector);\n        if (child) {\n            return child;\n        }\n    }\n    return null;\n}\n\n","'use strict'\n\nimport { html, css, customElement, LitElement, unsafeCSS, property } from 'lit-element'\nimport style from './byu-search.sass'\nimport * as util from 'byu-web-component-utils'\n\nconst CLASS_SELECTED_INPUT = '__byu-search-selected-input'\n\nconst ACTION_SUBMIT_FORM = 'submit-form'\nconst ACTION_CLICK = 'click'\nconst ACTION_NAVIGATE = 'navigate'\n\nconst DEFAULT_ACTION_TARGET_SUBMIT_FORM = 'form';\nconst DEFAULT_ACTION_TARGET_CLICK = 'button, input[type=\"submit\"], input[type=\"button\"]';\nconst DEFAULT_SEARCH_INPUT_SELECTOR = 'input[type=\"search\"], input[type=\"text\"]'\nconst DEFAULT_PLACEHOLDER = 'Search'\nconst DEFAULT_ACTION_TARGET = {\n  [ACTION_SUBMIT_FORM]: DEFAULT_ACTION_TARGET_SUBMIT_FORM,\n  [ACTION_CLICK]: DEFAULT_ACTION_TARGET_CLICK\n};\n\nconst EVENT_TYPE = 'byu-search'\n\n@customElement('byu-search')\nexport class BYUSearch extends LitElement {\n  @property({ type: String }) placeholder = 'Search'\n  @property({ type: String }) searchInputSelector = DEFAULT_SEARCH_INPUT_SELECTOR\n  @property({ type: String }) action = null\n  @property({ type: String }) actionTarget = null\n  @property({ type: String }) onbyusearch = null\n\n  get _searchSlot() {\n    return this.shadowRoot.querySelector('#search');\n  }\n\n  firstUpdated (_changedProperties) {\n    const searchElSlot = this.shadowRoot.querySelector('#search')\n    if (searchElSlot.assignedNodes().length > 0) {\n      this.shadowRoot.querySelector('#byu-site-search-label').remove()\n      this.shadowRoot.querySelector('#byu-site-search').remove()\n    }\n\n    this._input = this._lookupAndConfigureInputElement(this, this.searchInputSelector)\n    this._hideExtraElements() // Hide extra inputs and buttons\n    if (this.actionTarget === null) {\n      this.actionTarget = this._defaultActionTarget(this.action)\n    }\n    this._setupSearchListeners(this)\n  }\n\n  search () {\n    let el = this._input\n    if (!el) {\n      throw new Error(`Unable to perform search; no search element matching the selector '${this.searchInputSelector}' can be found!`)\n    }\n    let value = el.value\n    if (!value) return\n\n    let event = new CustomEvent(EVENT_TYPE, {\n      detail: {\n        search: value\n      },\n      bubbles: true,\n      composed: true\n    })\n\n    let cancelled = !this.dispatchEvent(event)\n    if (cancelled) return\n\n    if (this.action) {\n      this._runPredefinedAction(this, value)\n    }\n  }\n\n  _setupSearchListeners(search) {\n    let handler = search.__onbyusearchHandler = function (event) {\n      let name = search.onbyusearch;\n      if (!name) return;\n      let handler = window[name];\n      if (!handler) {\n        throw new Error(`Unable to find a global function named '${name}'`);\n      }\n      handler.call(search, event);\n    };\n\n    search.addEventListener(EVENT_TYPE, handler, false);\n  }\n\n  _runPredefinedAction (search, value) {\n    let action = search.action\n\n    switch (action) {\n      case ACTION_SUBMIT_FORM:\n        this._runSubmitFormAction(search, value)\n        break\n      case ACTION_CLICK:\n        this._runClickAction(search, value)\n        break\n      case ACTION_NAVIGATE:\n        this._runNavigateAction(search, value)\n        break\n      default:\n        throw new Error(`Invalid value for action: '${action}'`)\n    }\n  }\n\n  _runSubmitFormAction (search, value) {\n    let target = search.actionTarget\n\n    let form = util.querySelectorSlot(search._searchSlot, target)\n\n    if (!form) {\n      throw new Error(`Unable to find target for 'submit-form' action using selector '${target}'`)\n    }\n\n    if (!(form instanceof HTMLFormElement)) {\n      throw new Error(`Element found by selector '${target}' must be a <form>, but was '${form.localName}'`)\n    }\n\n    form.submit()\n  }\n\n  _runClickAction (search, value) {\n    let target = search.actionTarget\n\n    let button = util.querySelectorSlot(search._searchSlot, target)\n\n    if (!button) {\n      throw new Error(`Unable to find target for 'click' action using selector '${target}'`)\n    }\n\n    button.click()\n  }\n\n  _runNavigateAction (search, value) {\n    let target = search.actionTarget\n\n    if (!target) {\n      throw new Error('When using action=\"navigate\", you must specify an action-target')\n    }\n\n    if (target.indexOf('${search}')) {\n      console.warn(`[byu-search] WARNING: Using action=\"navigate\" with a target that does not contain \\${search} will not include the search terms in the URL.`, search)\n    }\n\n    window.location.assign(target.replace('${search}', window.encodeURIComponent(value)))\n  }\n\n  _lookupAndConfigureInputElement (search, selector) {\n    let input = this.querySelector(selector) || this.shadowRoot.querySelector(selector)\n\n    if (input) {\n      this._setupInputElement(search, input)\n    } else {\n      console.error(`[byu-search] WARNING! Unable to find a search input element using the selector '${selector}' on `, search)\n    }\n\n    return input\n  }\n\n  _hideExtraElements () {\n    const inputs = this.querySelectorAll(DEFAULT_SEARCH_INPUT_SELECTOR + ', button')\n    inputs.forEach((el) => {\n      if (!el.classList.contains(CLASS_SELECTED_INPUT)) {\n        el.classList.add('hidden')\n      }\n    })\n  }\n\n  _setupInputElement (search, input) {\n    this._applyStyleHelpers(search, input)\n    this._applyA11yHelpers(search, input)\n    this._setupEnterKeySearchDispatcher(search, input)\n  }\n\n  _setupEnterKeySearchDispatcher (search, input) {\n    let keypress = input.__byu_search_keyObserver = function (e) {\n      if (e.key === 'Enter') {\n        search.search()\n      }\n    }\n    input.addEventListener('keypress', keypress, false)\n  }\n\n  _applyStyleHelpers (search, input) {\n    input.classList.add(CLASS_SELECTED_INPUT)\n  }\n\n  // For Accessibility, it's good for us to have a title and placeholder set. So, if there isn't one, we'll set it.\n  _applyA11yHelpers (search, input) {\n    if (input.title && input.placeholder) return\n\n    let helped = []\n\n    if (!input.placeholder) {\n      input.placeholder = search.placeholder || input.title || DEFAULT_PLACEHOLDER\n      helped.push('placeholder')\n    }\n    if (!input.title) {\n      input.title = input.placeholder || search.placeholder || DEFAULT_PLACEHOLDER\n      helped.push('title')\n    }\n\n    input.__byu_search_a11yHelpersApplied = helped\n  }\n\n  _defaultActionTarget(action) {\n    if (!action) return null;\n    return DEFAULT_ACTION_TARGET[action];\n  }\n\n  /* --- RENDER COMPONENT --- */\n\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  render () {\n    return html`\n<div id=\"search-form\">\n    <div class=\"byu-search\">\n        <slot id=\"search\">\n            <label class=\"byu-search-label\" for=\"site-search\" id=\"byu-site-search-label\">Search</label>\n            <input type=\"text\" id=\"byu-site-search\" name=\"q\" aria-label=\"Site search\" placeholder=\"${this.placeholder}\">\n        </slot>\n        <button class=\"byu-search-btn\" @click=\"${this.search}\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n                <style>.st{stroke-width:10;fill:none;stroke:currentColor;stroke-linecap:round;}</style>\n                <circle class=\"st\" cx=\"45.5\" cy=\"45.5\" r=\"24.5\"/><path class=\"st\" d=\"M63 63l16 16\"/>\n            </svg>\n        </button>\n    </div>\n</div>\n    `\n  }\n}\n","import { LitElement, html, customElement, css, unsafeCSS } from 'lit-element'\nimport style from './byu-social-media-links.sass'\n\n@customElement('byu-social-media-links')\nexport class BYUSocialMediaLinks extends LitElement {\n\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  render () {\n    return html`\n    <div class=\"slot-wrapper\">\n        <slot id=\"social-main\"></slot>\n        <!--These others are deprecated, and are here for backwards-compatibility-->\n        <slot id=\"social-deprecated-facebook\" name=\"facebook\"></slot>\n        <slot id=\"social-deprecated-twitter\" name=\"twitter\"></slot>\n        <slot id=\"social-deprecated-instagram\" name=\"instagram\"></slot>\n        <slot id=\"social-deprecated-youtube\" name=\"youtube\"></slot>\n        <slot id=\"social-deprecated-pinterest\" name=\"pinterest\"></slot>\n        <slot id=\"social-deprecated-googleplus\" name=\"googleplus\"></slot>\n        <slot id=\"social-deprecated-linkedin\" name=\"linkedin\"></slot>\n        <slot id=\"social-deprecated-rss\" name=\"rss\"></slot>\n        <slot id=\"social-deprecated-snapchat\" name=\"snapchat\"></slot>\n    </div>\n    `\n  }\n}\n","'use strict'\n\nimport { html, css, customElement, LitElement, unsafeCSS } from 'lit-element'\nimport style from './byu-user-info.sass'\n\n@customElement('byu-user-info')\nexport class BYUUserInfo extends LitElement {\n\n  firstUpdated (_changedProperties) {\n    const userSlot = this.shadowRoot.querySelector('#user-name')\n    const logoutSlot = this.shadowRoot.querySelector('#logout')\n    const loginSlot = this.shadowRoot.querySelector('#login')\n    if (userSlot.assignedNodes().length === 0 || userSlot.assignedNodes()[0].innerHTML === '') {\n      userSlot.classList.add('hidden')\n      logoutSlot.classList.add('hidden')\n    } else {\n      loginSlot.classList.add('hidden')\n    }\n  }\n\n  static get styles () {\n    return css`${unsafeCSS(style)}`\n  }\n\n  render () {\n    return html`\n<div class=\"byu-id\">\n    <slot name=\"user-name\" id=\"user-name\"></slot>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><path fill=\"currentcolor\" d=\"M50 95c-26 0-34-18-34-18 3-12 8-18 17-18 5 5 10 7 17 7s12-2 17-7c9 0 14 6 17 18 0 0-7 18-34 18z\"/><circle cx=\"50\" cy=\"50\" r=\"45\" fill=\"none\" stroke=\"currentcolor\" stroke-width=\"10\"/><circle fill=\"currentcolor\" cx=\"50\" cy=\"40\" r=\"20\"/></svg>\n    <slot name=\"logout\" id=\"logout\"></slot>\n    <slot name=\"login\" id=\"login\"></slot>\n</div>\n    `\n  }\n}\n"],"names":["directives","WeakMap","isDirective","o","has","isCEPolyfill","window","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","noChange","nothing","marker","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","constructor","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","currentNode","pop","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","update","setValue","commit","_clone","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","TemplateResult","getHTML","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getTemplateElement","createElement","innerHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","_getValue","text","v","t","setAttribute","committer","directive","NodePart","__pendingValue","appendInto","startNode","appendChild","endNode","ref","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","itemParts","itemPart","item","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","__options","getOptions","event","call","DefaultTemplateProcessor","prefix","defaultTemplateProcessor","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","render","firstChild","Object","assign","walkerNodeFilter","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","forEach","countNodes","startIndex","insertNodeIntoTemplate","refNode","insertCount","walkerIndex","walkerNode","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","removeStylesFromLitTemplates","templates","styles","Set","from","querySelectorAll","add","shadyRenderSet","prepareTemplateStyles","renderedDOM","templateElement","condensedStyle","style","textContent","querySelector","nativeShadow","removes","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","litRender","delete","styleElement","JSCompiler_renameProperty","prop","defaultConverter","toAttribute","Boolean","JSON","stringify","fromAttribute","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","String","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","_ensureClassProperties","hasOwnProperty","superProperties","getPrototypeOf","k","createProperty","noAccessor","prototype","defineProperty","oldValue","_requestUpdate","configurable","enumerable","finalized","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","_valueHasChanged","_propertyValueFromAttribute","_propertyValueToAttribute","_saveInstanceProperties","_v","_applyInstanceProperties","connectedCallback","disconnectedCallback","attributeChangedCallback","_attributeToProperty","_propertyToAttribute","ctor","attrValue","propName","shouldRequestUpdate","_hasRequestedUpdate","_enqueueUpdate","requestUpdate","updateComplete","reject","previousUpdatePromise","res","rej","_hasConnected","performUpdate","hasUpdated","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","size","legacyCustomElement","clazz","define","standardCustomElement","descriptor","kind","elements","finisher","customElement","classOrDescriptor","standardProperty","placement","initializer","legacyProperty","proto","property","protoOrDescriptor","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","toString","unsafeCSS","textFromCSSResult","css","reduce","acc","idx","arrayFlat","flattenStyles","flat","LitElement","_styles","_getUniqueStyles","userStyles","flatStyles","styleSet","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","templateResult","styleInject","insertAt","head","getElementsByTagName","BYUBreadcrumbs","BYUFooterActionButton","BYUFooterColumn","BYUFooter","date","Date","getFullYear","JS_INIT_CLASS","EXPANDED_ATTR","MENU_OPEN_CLASS","SITE_NAV_CLASS","SITE_ACTION_CLASS","BYUHeader","headerEls","shadowRoot","el","_enableMobileMenu","headerEl","hasNav","getElementsByClassName","hasActions","showMenuButton","classList","_initMenuButton","navEl","actionsEl","menuButton","_clickMenuButton","target","btn","open","_closeMenu","_openMenu","hasMenuOpenClass","remove","BYUMenu","matchesSelector","selector","Element","actual","matches","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","doc","ownerDocument","querySelectorSlot","slot","roots","assignedNodes","flatten","filter","ELEMENT_NODE","each","len","child","CLASS_SELECTED_INPUT","ACTION_SUBMIT_FORM","ACTION_CLICK","ACTION_NAVIGATE","DEFAULT_ACTION_TARGET_SUBMIT_FORM","DEFAULT_ACTION_TARGET_CLICK","DEFAULT_SEARCH_INPUT_SELECTOR","DEFAULT_PLACEHOLDER","DEFAULT_ACTION_TARGET","EVENT_TYPE","BYUSearch","searchElSlot","_input","_lookupAndConfigureInputElement","searchInputSelector","_hideExtraElements","actionTarget","_defaultActionTarget","action","_setupSearchListeners","CustomEvent","detail","search","bubbles","composed","cancelled","dispatchEvent","_runPredefinedAction","handler","__onbyusearchHandler","onbyusearch","_runSubmitFormAction","_runClickAction","_runNavigateAction","form","util","_searchSlot","HTMLFormElement","submit","button","click","location","replace","encodeURIComponent","input","_setupInputElement","error","inputs","contains","_applyStyleHelpers","_applyA11yHelpers","_setupEnterKeySearchDispatcher","keypress","__byu_search_keyObserver","title","placeholder","helped","__byu_search_a11yHelpersApplied","BYUSocialMediaLinks","BYUUserInfo","userSlot","logoutSlot","loginSlot"],"mappings":"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"}